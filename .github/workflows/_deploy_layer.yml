name: Deploy layer

on:
  workflow_call:
    inputs:
      layer:
        description: "Layer name."
        type: string
      environment:
        description: "Environment name."
        type: string

env:
  ENVIRONMENT: ${{ inputs.environment }}

jobs:
  # Create matrix
  matrix:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: src/terragrunt/${{ inputs.layer }}
    env:
      layer: ${{ inputs.layer }}
    outputs:
      group_list: ${{ steps.group_list.outputs.group_list }}
      layer_module_groups: ${{ steps.layer_module_groups.outputs.layer_module_groups }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Terragrunt output-module-groups
        shell: bash
        run: |
          terragrunt output-module-groups --terragrunt-ignore-external-dependencies | tee ${RUNNER_TEMP}/${layer}.json
      
      - name: Set step output
        id: layer_module_groups
        shell: bash
        run: |
          echo "layer_module_groups=$(jq '.' --compact-output ${RUNNER_TEMP}/${layer}.json)" | tee -a "$GITHUB_OUTPUT"
      
      - name: Create ordered list of groups
        shell: bash
        run: |
          jq '. | keys | sort' ${RUNNER_TEMP}/${layer}.json | tee ${RUNNER_TEMP}/${layer}-groups.json
      
      - name: Set step output to terragrunt modules' groups
        id: group_list
        shell: bash
        run: |
          echo "group_list=$(jq '.' --compact-output ${RUNNER_TEMP}/${layer}-groups.json)" | tee -a "$GITHUB_OUTPUT"

  deploy_component_group:
    needs: matrix
    concurrency:
      group: deploy_${{ inputs.layer }}
    strategy:
      matrix:
        component_group: ${{ fromJson(needs.matrix.outputs.group_list) }}
    uses: ./.github/workflows/_deploy_component_group.yml
    with:
      component_list: ${{ toJson(fromJson(needs.matrix.outputs.layer_module_groups)[matrix.component_group]) }}
      environment: ${{ inputs.environment }}